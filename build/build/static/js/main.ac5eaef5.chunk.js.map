{"version":3,"sources":["components/FormCreateConversation.js","components/FormEnableAudioInConversations.js","components/FormLogin.js","components/Audio.js","components/EventsHistory.js","utils/createRtcAudioConnection.js","utils/csClient.js","App.js","reportWebVitals.js","index.js"],"names":["FormCreateConversation","onSubmit","useForm","register","handleSubmit","errors","htmlFor","type","id","name","aria-invalid","ref","required","maxLength","role","FormEnableAudioInConversations","defaultValue","FormLogin","Audio","srcObject","props","refAudio","useRef","useEffect","current","controls","autoPlay","EventTitle","event","style","text","request","response","body","EventsHistory","eventsHistory","onCleanHistoryClick","onClick","map","evt","idx","padding","margin","backgroundColor","JSON","stringify","waitFirstICEGatheringComplete","peerConnection","a","Promise","resolve","reject","onicegatheringstatechange","console","log","iceGatheringState","createRtcAudioConnection","navigator","mediaDevices","getUserMedia","video","audio","localStream","RTCPeerConnection","iceServers","urls","optional","addStream","createOffer","offerDescription","setLocalDescription","socket_io","require","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","logger","error","csClient","sessionData","onEventCallbacks","onRequestStartCallbacks","onRequestEndCallbacks","token","session_id","cs_url","headers","url","data","originating_session","forEach","callback","axios","axiosResponse","status","requestError","message","connect","ws_url","capi_client","path","transports","forceNew","reconnection","autoConnect","Manager","on","packet","loginData","emit","user_id","user_name","getSessionData","onEvent","push","onRequestStart","onRequestEnd","CSClient","BACKEND_URL","NotLoggedPage","onSubmitLogin","onSubmitSubscribe","LoggedPage","lastCSClientEvent","useState","setEvent","setLastEvent","clientEvent","useCSClientEvents","setEvents","audioSrcObject","audioState","setAudioState","initCSClient","onTrack","e","_setAudioSrcObject","getRemoteStreams","as","sdp","answer","remoteDescription","RTCSessionDescription","ontrack","setRemoteDescription","onEnableAudioInConversationSubmit","audio_conversation_id","conversation_id","pc","method","userConvRes","member_id","_embedded","conversations","find","member","from","offer","localDescription","onCreateConversationSubmit","conversation_name","conversation_display_name","convRes","getMyConversations","className","App","setLoginData","setsubscribeData","username","loginRes","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac5eaef5.chunk.js","sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nfunction FormCreateConversation({ onSubmit }) {\n    const { register, handleSubmit, errors } = useForm();\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <label htmlFor=\"conversation_name\">Name</label>\n\n            {/* use aria-invalid to indicate field contain error */}\n            <input\n                type=\"text\"\n                id=\"conversation_name\"\n                name=\"conversation_name\"\n                aria-invalid={errors.name ? \"true\" : \"false\"}\n                ref={register({ required: true, maxLength: 30 })}\n            />\n            <br />\n            <label htmlFor=\"conversation_display_name\">Display Name</label>\n            <input\n                type=\"text\"\n                id=\"conversation_display_name\"\n                name=\"conversation_display_name\"\n                aria-invalid={errors.name ? \"true\" : \"false\"}\n                ref={register({ required: true, maxLength: 30 })}\n            />\n\n            {/* use role=\"alert\" to announce the error message */}\n            {errors.name && errors.name.type === \"required\" && (\n                <span role=\"alert\">This is required</span>\n            )}\n            {errors.name && errors.name.type === \"maxLength\" && (\n                <span role=\"alert\">Max length exceeded</span>\n            )}\n\n            <input type=\"submit\" />\n            {/* <audio src=\"https://tribeofnoisestorage.blob.core.windows.net/music/b55104bdd2661122697e23213f1ff211.mp3\" controls autoPlay /> */}\n        </form>\n    )\n}\n\nexport default FormCreateConversation","\nimport { useForm } from \"react-hook-form\";\n\nfunction FormEnableAudioInConversations({ onSubmit }) {\n    const { register, handleSubmit, errors } = useForm();\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <label htmlFor=\"audio_conversation_id\">Conversations Id </label>\n\n            {/* use aria-invalid to indicate field contain error */}\n            <input\n                type=\"text\"\n                id=\"audio_conversation_id\"\n                name=\"audio_conversation_id\"\n                aria-invalid={errors.name ? \"true\" : \"false\"}\n                defaultValue=\"CON-71ed48a1-4983-4557-a911-561fcb380d2f\"\n                ref={register({ required: true, maxLength: 50, })}\n            />\n\n            {/* use role=\"alert\" to announce the error message */}\n            {errors.name && errors.name.type === \"required\" && (\n                <span role=\"alert\">This is required</span>\n            )}\n            {errors.name && errors.name.type === \"maxLength\" && (\n                <span role=\"alert\">Max length exceeded</span>\n            )}\n\n            <input type=\"submit\" />\n        </form>\n    )\n}\n\nexport default FormEnableAudioInConversations;","import { useForm } from \"react-hook-form\";\n\nfunction FormLogin({ onSubmit }) {\n    const { register, handleSubmit, errors } = useForm();\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <label htmlFor=\"username\">User Name</label>\n\n            {/* use aria-invalid to indicate field contain error */}\n            <input\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n                aria-invalid={errors.name ? \"true\" : \"false\"}\n                ref={register({ required: true, maxLength: 30 })}\n            />\n\n            {/* use role=\"alert\" to announce the error message */}\n            {errors.name && errors.name.type === \"required\" && (\n                <span role=\"alert\">This is required</span>\n            )}\n            {errors.name && errors.name.type === \"maxLength\" && (\n                <span role=\"alert\">Max length exceeded</span>\n            )}\n\n            <input type=\"submit\" />\n        </form>\n    )\n}\n\nexport default FormLogin","import React, { useRef, useEffect } from 'react';\n\nfunction Audio({ srcObject, ...props }) {\n    const refAudio = useRef(null)\n\n    useEffect(() => {\n        if (!refAudio.current) return\n        refAudio.current.srcObject = srcObject\n    }, [srcObject])\n\n    return <audio ref={refAudio} {...props} controls autoPlay />\n}\n\nexport default Audio","\nconst EventsHistory = ({ eventsHistory, onCleanHistoryClick }) => {\n    return (\n        <div>\n            <h2>History</h2>\n            <div>\n                <button onClick={onCleanHistoryClick} >Clean History</button>\n            </div>\n            {eventsHistory.map((evt, idx) => {\n                return (\n                    <div key={idx}  >\n                        <EventTitle event={evt} style={{ padding: \"5px\", margin: \"5px\" }} />\n                        <pre style={{ padding: \"5px\", margin: \"5px\", backgroundColor: \"#ddd\" }} >{JSON.stringify(evt, ' ', ' ')}</pre>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\n\nconst EventTitle = ({ event, style }) => {\n    let text = 'unknown'\n    if (event.request && event.response) {\n        text = '<- http response'\n    } else if (event.request && !event.response) {\n        text = '-> http request'\n    } else if (event.type && event.body) {\n        text = '<- ws event'\n    }\n\n\n    return (<h3 style={style} >{text}</h3>)\n}\n\n\n\nexport default EventsHistory","\nconst waitFirstICEGatheringComplete = async (peerConnection) => {\n    return new Promise((resolve, reject) => {\n        peerConnection.onicegatheringstatechange = () => {\n            console.log(\"onicegatheringstatechange \", peerConnection.iceGatheringState);\n            if (peerConnection.iceGatheringState === 'complete') {\n                resolve()\n            }\n        }\n    })\n\n}\n\n\nconst createRtcAudioConnection = async() => {\n    const localStream = await navigator.mediaDevices\n        .getUserMedia({\n            video: false,\n            audio: true,\n        })\n    \n    const peerConnection = new RTCPeerConnection(\n        {\n            iceServers: [\n                { urls: \"stun:stun.l.google.com:19302\", }\n            ],\n            'iceTransportPolicy': 'all',\n            'bundlePolicy': 'balanced',\n            'rtcpMuxPolicy': 'require',\n            'iceCandidatePoolSize': '0',\n        }, \n        {\n            optional: [{\n                'DtlsSrtpKeyAgreement': 'true',\n            }],\n        }\n    );    \n\n    peerConnection.addStream(localStream)\n    \n    const offerDescription = await peerConnection.createOffer()\n    \n    peerConnection.setLocalDescription(offerDescription)\n    \n    await waitFirstICEGatheringComplete(peerConnection)\n\n    return peerConnection\n\n}\n\n\nfunction _createRtcAudioConnection(){\n    return navigator.mediaDevices\n        .getUserMedia({\n            video: false,\n            audio: true,\n        })\n        .then((localStream) => {\n            console.log(\"RTCPeerConnection init\", localStream)\n            const iceServers = [\n                {\n                    urls: \"stun:stun.l.google.com:19302\",\n                    // urls: 'turn:138.68.169.35:3478?transport=tcp',\n                    // credential: 'bar',\n                    // username: 'foo2',\n                },\n            ]\n\n            var pc = new RTCPeerConnection({\n                iceServers,\n                'iceTransportPolicy': 'all',\n                'bundlePolicy': 'balanced',\n                'rtcpMuxPolicy': 'require',\n                'iceCandidatePoolSize': '0',\n            }, {\n                optional: [{\n                    'DtlsSrtpKeyAgreement': 'true',\n                }],\n            });\n\n            pc.addStream(localStream)\n\n            return pc\n        })\n        .then((pc) => {\n            console.log(\"create offer init\")\n            return pc.createOffer()\n                .then(offerDescription => pc.setLocalDescription(offerDescription))\n                .then(() => pc)\n        })\n        .then((pc) => {\n            console.log(\"onicegatheringstatechange init\")\n            return new Promise((resolve, reject) => {\n                pc.onicegatheringstatechange = () => {\n                    console.log(\"onicegatheringstatechange \", pc.iceGatheringState);\n                    if (pc.iceGatheringState === 'complete') {\n                        resolve(pc)\n                    }\n                }\n            })\n        })\n}\n\nexport default createRtcAudioConnection","\nimport axios from 'axios';\n// import io from 'socket.io-client';\nconst socket_io = require('socket.io-client');\nfunction uuidv4() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\n\nconst logger = {\n    info: (...args) => {\n        console.log(...args)\n    },\n    error: (...args) => {\n        console.error(...args)\n    }, \n}\n\n\nexport default function CSClient(){\n    let sessionData = {}\n    let onEventCallbacks = []\n    let onRequestStartCallbacks = []\n    let onRequestEndCallbacks = []\n\n    const onEvent = (callback) => {\n        const id = uuidv4()\n        onEventCallbacks.push({\n            id,\n            callback\n        }) \n        return id\n    }\n    const onRequestStart = (callback) => {\n        const id = uuidv4()\n        onRequestStartCallbacks.push({\n            id,\n            callback\n        })\n        return id\n    }\n\n    const onRequestEnd = (callback) => {\n        const id = uuidv4()\n        onRequestEndCallbacks.push({\n            id,\n            callback\n        })\n        return id\n    }\n\n    const request = async (request) => {\n        const { token, session_id, cs_url} = sessionData\n        try {\n            request.headers = {\n                'Authorization': `Bearer ${token}`,\n                // 'x-nexmo-sessionid': session_id\n            }\n            \n            request.url = `${cs_url}${request.url}`\n            if(request.data)\n                request.data = {\n                    originating_session: session_id,\n                    ...request.data\n                }\n\n            logger.info({ request }, \"CSClient request -> \")\n            onRequestStartCallbacks\n                .forEach(({ callback }) => callback({ request }))\n            const axiosResponse = await axios(request)\n            onRequestEndCallbacks\n                .forEach(({ callback }) => callback({\n                    request,\n                    response: {\n                        data: axiosResponse.data,\n                        status: axiosResponse.status,\n                        headers: axiosResponse.headers\n                    }\n                }))\n\n            logger.info({ request, data: axiosResponse.data, status: axiosResponse.status }, \"CSClient reponse <-\")\n            return axiosResponse\n        } catch (err) {\n            const requestError = {\n                request: request\n            }\n            if (err.response) {\n                requestError.response = {\n                    data: err.response.data,\n                    status: err.response.status,\n                    headers: err.response.headers,\n                }\n            }\n            if (err.message) {\n                requestError.message = err.message\n            }\n\n            logger.error({ ...requestError }, \"CSClient error <-\")\n            onRequestEndCallbacks\n                .forEach(({ callback }) => callback(requestError))\n\n            throw err;\n        }\n    }\n    // const onEvent = () => \n    const getSessionData = () => sessionData\n\n    const connect = async ({ token, cs_url, ws_url }) =>  new Promise(resolve => {\n\n        const capi_client = socket_io.connect(ws_url, {\n            path: \"/rtc\",\n            transports: ['websocket'],\n            forceNew: false,\n            reconnection: false,\n            autoConnect: true,\n        });\n\n        \n        require('socketio-wildcard')(socket_io.Manager)(capi_client)\n\n        capi_client.on('connect', function () {\n\n            capi_client.on('*', function (packet) {\n                const [type, body] = packet.data;\n                const event = { type, ...body };\n                // onEventCallback(event)\n                onEventCallbacks\n                    .forEach(({callback}) => callback(event) )\n\n            })\n            const loginData = {\n                \"device_id\": \"666666666666666\", // TODO: use https://github.com/Valve/fingerprintjs2\n                \"device_type\": \"js\",\n                token\n            }\n\n            capi_client.emit(\"session:login\", { body: loginData} )\n\n            capi_client.on(\"session:success\", (event) => {\n                const {id, name, user_id} = event.body\n                sessionData = {\n                    session_id: id,\n                    user_name: name,\n                    user_id: user_id,\n                    token,\n                    cs_url, \n                    ws_url\n\n                }\n                resolve()\n\n            })\n        })\n\n\n        \n    });\n\n    \n    return {\n        connect,\n        request,\n        getSessionData,\n        onEvent,\n        onRequestStart,\n        onRequestEnd\n    }\n\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport FormCreateConversation from './components/FormCreateConversation'\nimport FormEnableAudioInConversations from './components/FormEnableAudioInConversations'\nimport FormLogin from './components/FormLogin'\nimport Audio from './components/Audio'\nimport EventsHistory from './components/EventsHistory'\n\nimport createRtcAudioConnection from './utils/createRtcAudioConnection'\nimport CSClient from './utils/csClient'\n\n\nimport './App.css';\n\n\n\nconst csClient = CSClient()\nconst BACKEND_URL = `http://localhost:5001`\n\n\nfunction App() {\n  const [loginData, setLoginData] = useState(null)\n  const [subscribeData, setsubscribeData] = useState(null)\n\n  const onSubmitLogin = async ({username}) => {\n    const loginRes = await axios({\n      url: `${BACKEND_URL}/api/login`,\n      method: \"post\",\n      data: {\n        \"username\": username\n      }\n    })\n    setsubscribeData(loginRes.data)\n  }\n\n  const onSubmitSubscribe = async ({ username }) => {\n    const loginRes = await axios({\n      url: `${BACKEND_URL}/api/subscribe`,\n      method: \"post\",\n      data: {\n        \"username\": username\n      }\n    })\n    setLoginData(loginRes.data)\n  }\n\n\n  useEffect(() => {\n    document.title = \"Conversation Service examples\"\n\n    \n  })\n\n  \n\n  return (\n    <div>\n      {!loginData && <NotLoggedPage \n        onSubmitLogin={onSubmitLogin}  \n        onSubmitSubscribe={onSubmitSubscribe}\n      />}\n      {loginData && <LoggedPage loginData={loginData} />}\n    </div>\n  )\n}\n\nconst NotLoggedPage = ({ onSubmitLogin, onSubmitSubscribe }) => {\n  return (\n    <div>\n      <h2>Login</h2>\n      <FormLogin onSubmit={onSubmitLogin} />\n      <h2>Or Subscribe</h2>\n      <FormLogin onSubmit={onSubmitSubscribe} />\n    </div>\n  )\n}\n\nfunction useCSClientEvents (csClient) {\n  \n  const [event, setEvent] = useState(null)\n  \n  const setLastEvent = (clientEvent) => {\n    setEvent(clientEvent)\n  }\n  \n  useEffect(() => {\n    csClient.onEvent(setLastEvent)\n    csClient.onRequestStart(setLastEvent)\n    csClient.onRequestEnd(setLastEvent)\n  })\n  \n  return event\n}\n\n\nfunction LoggedPage(props) {\n  \n  // const [csClient, setCsClient] = useState(null)\n  \n  const lastCSClientEvent = useCSClientEvents(csClient)\n  const [eventsHistory, setEvents] = useState([])\n  \n  // useCSClientEvents\n  const [audioState, setAudioState] = useState({\n    audioSrcObject: null,\n    peerConnection: null\n  })\n\n  \n  //init cs client\n  useEffect(() => {\n    console.log(` ->->->-> useEffect init csClient`)\n\n    const initCSClient = async () => {\n      console.log(` ++++ initialize createCSClient`)\n      const { token, cs_url, ws_url } = props.loginData\n      \n      csClient.connect({\n        token, cs_url, ws_url\n      });\n\n    }\n\n    initCSClient()\n\n\n  }, [props.loginData])\n\n  useEffect(() => {\n    \n    const appendHistory = (clientEvent) => {\n      if (clientEvent)\n        setEvents(eventsHistory => [...eventsHistory, clientEvent])\n    }\n\n    appendHistory(lastCSClientEvent)\n\n  }, [lastCSClientEvent] )\n\n\n  useEffect(() => {\n    console.log(` ->->->-> useEffect csClient Handler `, csClient);\n    if (!csClient)\n      return;\n\n    const onTrack = (e) => {\n      const _setAudioSrcObject = audioState.peerConnection.getRemoteStreams()[0]\n      console.log(`_setAudioSrcObject `, _setAudioSrcObject)\n\n      setAudioState(as => {\n        console.log(`setAudioState onTrack`, {\n          ...as,\n          audioSrcObject: _setAudioSrcObject\n        })\n        return {\n          ...as, \n          audioSrcObject: _setAudioSrcObject  \n        }\n      })\n    }\n\n    const onEvent = async (evt) => {\n      if (evt.type === 'rtc:answer') {\n        const sdp = evt.body.answer\n        const remoteDescription = new RTCSessionDescription({\n          type: 'answer',\n          sdp,\n        })\n        \n        console.log(`rtc:answer audioState `, audioState)\n\n        if (audioState.peerConnection) {\n          \n          audioState.peerConnection.ontrack = onTrack\n          \n          audioState.peerConnection.setRemoteDescription(remoteDescription)\n        }\n\n      }\n\n    }\n\n    csClient.onEvent(onEvent)\n\n  }, [audioState])\n\n  const onEnableAudioInConversationSubmit = async (data) => {\n    // const { conversation_id } = data\n    try {\n    console.log(`--- onEnableAudioInConversationSubmit`, data)\n    const { audio_conversation_id} = data\n    const conversation_id = audio_conversation_id\n    const pc = await createRtcAudioConnection()\n    \n    console.log(`setAudioState `, { ...audioState, peerConnection: pc })\n    setAudioState({ ...audioState, peerConnection: pc })\n    \n    // peerConnection = pc\n    const userConvRes = await csClient.request({\n        url: `/v0.3/users/${csClient.getSessionData().user_id}/conversations`,\n        method: \"get\"\n    })\n\n    const member_id = userConvRes.data._embedded.conversations.find(({ id }) => id === conversation_id)._embedded.member.id \n\n    await csClient.request({\n      url: `/v0.1/conversations/${conversation_id}/rtc`,\n      method: \"post\",\n      data: {\n        from: member_id,\n        body: {\n          offer: pc.localDescription,\n        }\n      }\n    })\n\n    } catch (e){\n      console.log(`onEnableAudioInConversationSubmit error: `, e)\n    }\n\n  }\n\n  const onCreateConversationSubmit = async (data) => {\n    const { conversation_name, conversation_display_name } = data\n    const convRes = await csClient.request({\n      url: `/v0.3/conversations`,\n      method: \"post\",\n      data: {\n        \"name\": conversation_name,\n        \"display_name\": conversation_display_name\n      }\n    })\n    \n    await csClient.request({\n      url: `/v0.3/conversations/${convRes.data.id}/members`,\n      method: \"post\",\n      data: {\n        \"state\": \"joined\",\n        \"user\": {\n          name: csClient.getSessionData().user_name,\n        },\n        \"channel\": {\n          \"type\": \"app\"\n        }\n      }\n    })\n    \n  }\n\n  const getMyConversations = async () => {\n    await csClient.request({\n      url: `/v0.3/users/${csClient.getSessionData().user_id}/conversations`,\n      method: \"get\"\n    })\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <h1>Conversations Client Playground</h1>  \n      <div>\n        <h2>Create Conversation and Join</h2>\n        <FormCreateConversation onSubmit={onCreateConversationSubmit} />\n        <h2>Get My Conversations</h2>\n        <button onClick={getMyConversations} >Get My Conversations</button>\n        <h2>Enable Audio In Conversations</h2>\n        <FormEnableAudioInConversations onSubmit={onEnableAudioInConversationSubmit} />\n        <Audio srcObject={audioState.audioSrcObject} />\n        <EventsHistory \n          eventsHistory={eventsHistory} \n          onCleanHistoryClick={() => setEvents(() => [])}\n        />\n      </div>\n          \n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}